import { motion } from 'framer-motion';

const Analysis = () => {
  const exploitationTypes = [
    {
      type: "Gi√° tr·ªã th·∫∑ng d∆∞ TUY·ªÜT ƒê·ªêI",
      icon: "‚è∞",
      color: "surplus",
      description: "K√©o d√†i th·ªùi gian l√†m vi·ªác",
      examples: [
        "VƒÉn h√≥a overtime kh√¥ng l∆∞∆°ng",
        "Always-on, always-connected",
        "Email/Slack sau gi·ªù l√†m vi·ªác",
        "Deadline phi th·ª±c t·∫ø"
      ],
      formula: "TƒÉng m b·∫±ng c√°ch k√©o d√†i th·ªùi gian lao ƒë·ªông"
    },
    {
      type: "Gi√° tr·ªã th·∫∑ng d∆∞ T∆Ø∆†NG ƒê·ªêI",
      icon: "üìà",
      color: "labor",
      description: "TƒÉng nƒÉng su·∫•t lao ƒë·ªông",
      examples: [
        "ƒê√†o t·∫°o & ph√°t tri·ªÉn k·ªπ nƒÉng",
        "KPI & OKR √°p l·ª±c cao",
        "T·ª± ƒë·ªông h√≥a & AI thay th·∫ø",
        "\"L√†m nhi·ªÅu h∆°n v·ªõi √≠t h∆°n\""
      ],
      formula: "TƒÉng m b·∫±ng c√°ch gi·∫£m th·ªùi gian lao ƒë·ªông c·∫ßn thi·∫øt"
    }
  ];

  return (
    <section className="min-h-screen py-20 px-6 relative">
      {/* Background */}
      <div className="absolute inset-0 bg-gradient-to-b from-capital-dark via-capital-gray to-capital-dark opacity-50"></div>

      <div className="relative z-10 max-w-7xl mx-auto">
        <motion.div
          initial={{ opacity: 0, y: -30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true }}
          className="text-center mb-16"
        >
          <h2 className="text-4xl md:text-5xl font-bold mb-6">
            Hai H√¨nh Th·ª©c <span className="text-surplus">B√≥c L·ªôt</span>
          </h2>
          <p className="text-xl text-gray-400 max-w-3xl mx-auto">
            Doanh nghi·ªáp hi·ªán ƒë·∫°i s·ª≠ d·ª•ng c·∫£ hai ph∆∞∆°ng ph√°p ƒë·ªÉ t·ªëi ƒëa h√≥a l·ª£i nhu·∫≠n
          </p>
        </motion.div>

        <div className="grid md:grid-cols-2 gap-8 mb-20">
          {exploitationTypes.map((item, index) => (
            <motion.div
              key={index}
              initial={{ opacity: 0, x: index === 0 ? -50 : 50 }}
              whileInView={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.8, delay: index * 0.2 }}
              viewport={{ once: true }}
              whileHover={{ scale: 1.02, y: -5 }}
              className={`glass-effect p-8 rounded-2xl border-2 transition-all duration-300 ${
                item.color === 'surplus' 
                  ? 'border-surplus/30 hover:border-surplus' 
                  : 'border-labor/30 hover:border-labor'
              }`}
            >
              <div className="text-6xl mb-4">{item.icon}</div>
              <h3 className={`text-2xl md:text-3xl font-bold mb-3 ${
                item.color === 'surplus' ? 'text-surplus' : 'text-labor'
              }`}>
                {item.type}
              </h3>
              <p className="text-lg text-gray-300 mb-6 font-semibold">
                {item.description}
              </p>

              <div className="mb-6">
                <h4 className="text-sm uppercase tracking-wider text-gray-500 mb-3 font-bold">
                  Bi·ªÉu hi·ªán th·ª±c t·∫ø:
                </h4>
                <ul className="space-y-2">
                  {item.examples.map((example, idx) => (
                    <li key={idx} className="flex items-start">
                      <span className={`mr-2 flex-shrink-0 ${
                        item.color === 'surplus' ? 'text-surplus' : 'text-labor'
                      }`}>‚ñ∏</span>
                      <span className="text-gray-300">{example}</span>
                    </li>
                  ))}
                </ul>
              </div>

              <div className={`p-4 rounded-lg ${
                item.color === 'surplus' 
                  ? 'bg-surplus/10 border border-surplus/30' 
                  : 'bg-labor/10 border border-labor/30'
              }`}>
                <p className="text-sm text-gray-400 italic">
                  {item.formula}
                </p>
              </div>
            </motion.div>
          ))}
        </div>

        {/* Key Insight */}
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true }}
          className="max-w-4xl mx-auto glass-effect p-8 rounded-2xl border-2 border-surplus/50"
        >
          <div className="flex items-start gap-4">
            <span className="text-4xl">üí°</span>
            <div>
              <h4 className="text-2xl font-bold mb-3 text-surplus">Nh·∫≠n di·ªán then ch·ªët:</h4>
              <p className="text-lg text-gray-300 leading-relaxed">
                Khi doanh nghi·ªáp n√≥i "ph√°t tri·ªÉn b·∫°n", h·ªç ƒëang <span className="text-labor font-bold">tƒÉng nƒÉng su·∫•t c·ªßa b·∫°n</span> (v) 
                ƒë·ªÉ <span className="text-surplus font-bold">tƒÉng gi√° tr·ªã th·∫∑ng d∆∞</span> (m). 
                Khi h·ªç y√™u c·∫ßu "commitment" v√† "passion", h·ªç ƒëang <span className="text-surplus font-bold">k√©o d√†i th·ªùi gian b√≥c l·ªôt</span> m√† 
                kh√¥ng c·∫ßn tr·∫£ th√™m ti·ªÅn.
              </p>
            </div>
          </div>
        </motion.div>
      </div>
    </section>
  );
};

export default Analysis;

